{"version":3,"sources":["Components/Notification.js","Components/Main.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","Notification","type","text","setNotificationVisible","userId","notification","setSkipped","skipped","classes","clickHandler","a","axios","post","prev","className","onClick","elevation","variant","severity","temp","match","toLowerCase","includes","original","split","limitedIndex","map","str","indexOf","toUpperCase","join","manipulateText","process","PORT","Main","useState","setUserId","setNotification","notificationVisible","init","newSocket","io","connect","on","data","console","log","id","res","user","_id","useEffect","setTimeout","appearTime","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKhB,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,KACAC,EAKC,EALDA,uBACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,WACAC,EACC,EADDA,QAEMC,EAAUf,IAEVgB,EAAY,uCAAG,sBAAAC,EAAA,6DACnBP,GAAuB,GADJ,SAEbQ,IAAMC,KAAK,4BAA6B,CAC5CR,SACAC,iBAJiB,OAOjBC,EADc,IAAZC,EACS,EAEA,SAACM,GAAD,OAAWA,EAAQ,IATb,2CAAH,qDA+BlB,OACE,qBAAKC,UAAWN,EAAQZ,KAAxB,SACE,cAAC,IAAD,CACEmB,QAASN,EACTO,UAAW,EACXC,QAAQ,SACRC,SAAUjB,EAJZ,SApBmB,SAACC,GACtB,IAAIiB,EAAOjB,EAOX,GANIiB,EAAKC,MAAM,WACbD,GAAc,KAEZA,EAAKC,MAAM,UACbD,EAAO,KAAOA,EAAO,MAEnBA,EAAKE,cAAcC,SAAS,mBAAoB,CAClD,IAAMC,EAAWJ,EAAKK,MAAM,KAEtBC,EADYF,EAASG,KAAI,SAACC,GAAD,OAASA,EAAIN,iBACbO,QAAQ,WACvCL,EAASE,GAAgBF,EAASE,GAAcI,cAChDN,EAASE,EAAe,GAAKF,EAASE,EAAe,GAAGI,cACxDV,EAAOI,EAASO,KAAK,KAEvB,OAAOX,EAUFY,CAAe7B,OC5DX8B,mIAAYC,KAEV,SAASC,IACtB,MAA4BC,qBAA5B,mBAAO/B,EAAP,KAAegC,EAAf,KACA,EAAwCD,qBAAxC,mBAAO9B,EAAP,KAAqBgC,EAArB,KACA,EAAsDF,oBAAS,GAA/D,mBAAOG,EAAP,KAA4BnC,EAA5B,KACA,EAA8BgC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgBD,EAAhB,KAEMiC,EAAI,uCAAG,4BAAA7B,EAAA,uDACL8B,EAAYC,KAAGC,QAAH,MACRC,GAAG,UAAb,uCAAwB,WAAOC,GAAP,eAAAlC,EAAA,6DACtBmC,QAAQC,IAAI,uBADU,SAEJnC,IAAMC,KAAN,oBAAgC,CAChDmC,GAAIP,EAAUO,KAHM,OAEhBC,EAFgB,OAKtBZ,EAAUY,EAAIJ,KAAKK,KAAKC,KACxBV,EAAUG,GAAG,gBAAgB,SAACC,GACxBA,IACFtC,GAAW,SAACO,GAAD,OACA,IAATA,GAAoC,IAATA,EAAbA,GAAQ,EAAgCA,KAExDwB,EAAgBO,GAChBzC,GAAuB,OAG3BqC,EAAUG,GAAG,cAAc,WACzBE,QAAQC,IAAI,+BAhBQ,2CAAxB,uDAFW,2CAAH,qDAmCV,OAZAK,qBAAU,WACRZ,MACC,IAEHY,qBAAU,WACJ9C,GACF+C,YAAW,WACTjD,GAAuB,KACI,IAA1BE,EAAagD,cAEjB,CAAChD,IAGF,8BACe,IAAZE,GAAiB+B,GAChB,cAACtC,EAAD,CACEC,KAAMI,EAAaJ,KACnBC,KAAMG,EAAaH,KACnBC,uBAAwBA,EACxBC,OAAQA,EACRC,aAAcA,EACdC,WAAYA,EACZC,QAASA,MC9CJ+C,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAACoB,EAAD,OCFNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c5a39c4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Notification({\r\n  type,\r\n  text,\r\n  setNotificationVisible,\r\n  userId,\r\n  notification,\r\n  setSkipped,\r\n  skipped,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const clickHandler = async () => {\r\n    setNotificationVisible(false);\r\n    await axios.post(\"/api/v1/user/notification\", {\r\n      userId,\r\n      notification,\r\n    });\r\n    if (skipped === 3) {\r\n      setSkipped(1);\r\n    } else {\r\n      setSkipped((prev) => (prev += 1));\r\n    }\r\n  };\r\n\r\n  const manipulateText = (text) => {\r\n    let temp = text;\r\n    if (temp.match(/sale/i)) {\r\n      temp = temp + \"!\";\r\n    }\r\n    if (temp.match(/new/i)) {\r\n      temp = \"~~\" + temp + \"~~\";\r\n    }\r\n    if (temp.toLowerCase().includes(\"limited edition\")) {\r\n      const original = temp.split(\" \");\r\n      const lowerCase = original.map((str) => str.toLowerCase());\r\n      const limitedIndex = lowerCase.indexOf(\"limited\");\r\n      original[limitedIndex] = original[limitedIndex].toUpperCase();\r\n      original[limitedIndex + 1] = original[limitedIndex + 1].toUpperCase();\r\n      temp = original.join(\" \");\r\n    }\r\n    return temp;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <MuiAlert\r\n        onClick={clickHandler}\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        severity={type}\r\n      >\r\n        {manipulateText(text)}\r\n      </MuiAlert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport Notification from \"./Notification\";\r\nconst PORT = process.env.PORT || 8080;\r\n\r\nexport default function Main() {\r\n  const [userId, setUserId] = useState();\r\n  const [notification, setNotification] = useState();\r\n  const [notificationVisible, setNotificationVisible] = useState(false);\r\n  const [skipped, setSkipped] = useState(0);\r\n\r\n  const init = async () => {\r\n    const newSocket = io.connect(`/`);\r\n    newSocket.on(\"connect\", async (data) => {\r\n      console.log(\"Connected to server\");\r\n      const res = await axios.post(`/api/v1/user/init`, {\r\n        id: newSocket.id,\r\n      });\r\n      setUserId(res.data.user._id);\r\n      newSocket.on(\"notification\", (data) => {\r\n        if (data) {\r\n          setSkipped((prev) =>\r\n            prev === 1 ? (prev += 1) : prev === 2 ? (prev += 1) : prev\r\n          );\r\n          setNotification(data);\r\n          setNotificationVisible(true);\r\n        }\r\n      });\r\n      newSocket.on(\"disconnect\", () => {\r\n        console.log(\"Disconnected from server\");\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (notification) {\r\n      setTimeout(() => {\r\n        setNotificationVisible(false);\r\n      }, notification.appearTime * 1000);\r\n    }\r\n  }, [notification]);\r\n\r\n  return (\r\n    <div>\r\n      {skipped !== 2 && notificationVisible && (\r\n        <Notification\r\n          type={notification.type}\r\n          text={notification.text}\r\n          setNotificationVisible={setNotificationVisible}\r\n          userId={userId}\r\n          notification={notification}\r\n          setSkipped={setSkipped}\r\n          skipped={skipped}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Main from \"./Components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}